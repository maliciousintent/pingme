extends layout
block favicon
  if offline === 0
    link(rel='icon', href='/img/ok.ico?v=2')
  else
    link(rel='icon', href='/img/ko.ico?v=2')

block content

  .page-header.row
    .col-lg-7.col-lg-offset-2(style='cursor:pointer;', onclick='document.location.href="/";')
      h1 Ping 
        span.text-muted &mdash; Websites health checks
        
    .col-lg-1
      h1.pull-right
        if offline === 0
          span.text-success.glyphicon.glyphicon-ok
        else
          span.text-danger.glyphicon.glyphicon-remove
        | &nbsp;

  .row
    .col-lg-8.col-lg-offset-2
      
      if message && message.length
        .alert.alert-info
          p #{message}
      
      if offline > 0
        .alert.alert-danger
          p
            strong Warning
            br 
            | One or more websites are currently offline. Please investigate.
      
      table.table.table-striped.table-hover.table-condensed
        thead
          tr
            th &nbsp;
            th Name
            th HTTP / Socket
            th Response time
            th Last check
            th.text-center Status
        tbody
          for website in websites
            tr(class="#{(statuses[website.key] && statuses[website.key][0] !== 'ok') ? 'danger' : ''}")
              td
                form(action='/delete', method='post')
                  input(type='hidden', name='_method', value='delete')
                  input(type='hidden', name='name', value=website.key)
                  button.btn.btn-xs(type='submit')
                    span.text-muted.glyphicon.glyphicon-trash
              td
                a(href='#{website.value}', target='_blank') #{website.key}
              td #{statuses[website.key] && statuses[website.key][1]}
              td #{statuses[website.key] && statuses[website.key][3]} ms
              td #{statuses[website.key] && statuses[website.key][2]}
              td.text-center
                if statuses[website.key] && statuses[website.key][0] === 'ok'
                  if statuses[website.key] && statuses[website.key][2] > timeout_ms
                    span.text-warning.glyphicon.glyphicon-time
                  else
                    span.text-success.glyphicon.glyphicon-ok
                else
                  span.text-danger.glyphicon.glyphicon-remove


      p.text-center.text-muted
        input#autorefresh(type='checkbox', value='1', checked='checked')
        | &nbsp;Autorefresh (every #{interval / 2 / 1000}s)
        
        
  script.
    setInterval(function () {
      if (document.querySelector('#autorefresh').checked) {
        window.location.reload();
      }
    }, #{interval / 2});